---
apiVersion: v1
kind: Template
metadata:
  name: ${identifier}
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ${identifier}
  imagePullSecrets:
  - name: ${IMAGE_PULL_SECRET}

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ${identifier}
    name: ${identifier}
    annotations:
      ignore-check.kube-linter.io/unset-cpu-requirements: "no cpu limits"
  spec:
    replicas: ${{REPLICAS}}
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    selector:
      matchLabels:
        app: ${identifier}
    template:
      metadata:
        labels:
          app: ${identifier}
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - ${identifier}
                topologyKey: "kubernetes.io/hostname"
              weight: 100
        serviceAccountName: ${identifier}
        containers:
        - image: ${IMAGE}:${unleashEdgeVersion}
          imagePullPolicy: Always
          name: ${identifier}
          args:
          - edge
          env:
            - name: APP_NAME
              value: ${identifier}
            - name: TOKENS
              valueFrom:
                secretKeyRef:
                  name: ${configSecret}
                  key: INIT_CLIENT_API_TOKENS
            - name: UPSTREAM_URL
              value: ${unleashUrl}
          ports:
          - name: unleash-edge
            containerPort: 3063
          resources:
            requests:
              memory: ${MEMORY_REQUESTS}
              cpu: ${CPU_REQUESTS}
            limits:
              memory: ${MEMORY_LIMIT}
          readinessProbe:
            exec:
              command: ["/unleash-edge", "ready"]
            initialDelaySeconds: 1
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            exec:
              command: ["/unleash-edge", "health"]
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "5"]
- apiVersion: v1
  kind: Service
  metadata:
    name: ${identifier}
    labels:
      app: ${identifier}
  spec:
    ports:
      - protocol: TCP
        port: 80
        targetPort: 3063
        name: ${identifier}
    selector:
      app: ${identifier}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      cert-manager.io/issuer-kind: ClusterIssuer
      cert-manager.io/issuer-name: ${issuer_name}
    labels:
      service: ${identifier}
    name: ${identifier}
  spec:
    host: ${host}
    to:
      kind: Service
      name: ${identifier}
      weight: 100
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge

parameters:
- name: IMAGE
  value: quay.io/app-sre/unleash-edge
  displayName: unleash-edge image
  description: unleash-edge docker image. Defaults to quay.io/app-sre/unleash-edge
- name: unleashEdgeVersion
  value: v18.0.1
  displayName: unleash-edge version
  description: unleash-edge version which defaults to latest
- name: REPLICAS
  value: "3"
- name: MEMORY_REQUESTS
  value: 100Mi
- name: MEMORY_LIMIT
  value: 200Mi
- name: CPU_REQUESTS
  value: 50m
- name: IMAGE_PULL_SECRET
  value: quay.io
- name: issuer_name
  value: letsencrypt-prod-http
- name: identifier
  value: app-interface-edge
- name: host
  description: The external hostname for the route
  required: true
- name: configSecret
  value: app-interface-config
  description: The name of the secret that contains the tokens for the Unleash instance
  required: true
- name: unleashUrl
  description: The URL of the Unleash instance
  required: true
